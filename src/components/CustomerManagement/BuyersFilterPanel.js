import React from 'react';
import { Accordion, Row, Col, Button, Form } from 'react-bootstrap';
import { formatPriceForDisplay, formatAppliedPrice } from '../../utils/price';

const BuyersFilterPanel = ({
    selectedBuyTypes,
    onToggleBuyType,
    onToggleAllBuyTypes,
    tempPriceFilters,
    sliderValues,
    onSliderChange,
    onTempPriceChange,
    onApply,
    onClear,
    filteredCount,
    appliedPriceFilters
}) => {
    return (
        <Accordion defaultActiveKey="1" className="mb-3">
            <Accordion.Item eventKey="0">
                <Accordion.Header>
                    <h6 className="mb-0">Í≥†Í∞ù ÌïÑÌÑ∞</h6>
                </Accordion.Header>
                <Accordion.Body>
                    <Row className="mb-3">
                        <Col xs={12}>
                            <h6 className="mb-2">Í≥†Í∞ù Ïú†Ìòï</h6>
                            <div className="d-flex flex-wrap gap-2 mb-2">
                                {['ÏõîÏÑ∏', 'Ï†ÑÏÑ∏', 'Îß§Îß§'].map(type => (
                                    <div key={type} className="form-check">
                                        <input
                                            className="form-check-input"
                                            type="checkbox"
                                            id={`buyType-${type}`}
                                            checked={selectedBuyTypes.has(type)}
                                            onChange={() => onToggleBuyType(type)}
                                        />
                                        <label className="form-check-label" htmlFor={`buyType-${type}`}>
                                            {type}
                                        </label>
                                    </div>
                                ))}
                                <Button
                                    variant="outline-secondary"
                                    size="sm"
                                    onClick={onToggleAllBuyTypes}
                                    className="ms-2"
                                >
                                    {selectedBuyTypes.size === 3 ? 'Ï†ÑÏ≤¥ Ìï¥Ï†ú' : 'Ï†ÑÏ≤¥ ÏÑ†ÌÉù'}
                                </Button>
                            </div>
                        </Col>
                    </Row>

                    <Row>
                        <Col xs={12}>
                            <h6 className="mb-3">Í∞ÄÍ≤© Î≤îÏúÑ ÌïÑÌÑ∞</h6>
                            <small className="text-muted mb-3 d-block">
                                üí° ÏÇ¨Ïö©Î≤ï: Ïà´Ïûê ÏûÖÎ†• Ïãú 'Ïñµ', 'Ï≤úÎßå', 'Îßå' Îã®ÏúÑ ÏÇ¨Ïö© Í∞ÄÎä• (Ïòà: 1Ïñµ, 5000Îßå) | Ïä¨ÎùºÏù¥ÎçîÎ°úÎèÑ Ï°∞Ï†ï Í∞ÄÎä• | 'Ï†ÅÏö©' Î≤ÑÌäºÏùÑ ÎàåÎü¨Ïïº ÌïÑÌÑ∞Í∞Ä Ï†ÅÏö©Îê©ÎãàÎã§
                            </small>

                            <Row>
                                {selectedBuyTypes.has('Îß§Îß§') && (
                                    <Col xs={12} lg={12} className="mb-3">
                                        <div className="border rounded p-3">
                                            <h6 className="mb-3 text-primary">Îß§Îß§</h6>
                                            <Row>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">ÏµúÏÜåÍ∞ÄÍ≤©</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="10000000000"
                                                        step="10000000"
                                                        value={sliderValues.Îß§Îß§.min}
                                                        onChange={(e) => onSliderChange('Îß§Îß§', 'min', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 100000000"
                                                            value={tempPriceFilters.Îß§Îß§.min ? formatAppliedPrice(tempPriceFilters.Îß§Îß§.min) : ''}
                                                            onChange={(e) => onTempPriceChange('Îß§Îß§', 'min', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-primary align-self-center fw-bold">
                                                            {tempPriceFilters.Îß§Îß§.min ? formatPriceForDisplay(tempPriceFilters.Îß§Îß§.min) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">ÏµúÎåÄÍ∞ÄÍ≤©</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="10000000000"
                                                        step="10000000"
                                                        value={sliderValues.Îß§Îß§.max}
                                                        onChange={(e) => onSliderChange('Îß§Îß§', 'max', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 1000000000"
                                                            value={tempPriceFilters.Îß§Îß§.max ? formatAppliedPrice(tempPriceFilters.Îß§Îß§.max) : ''}
                                                            onChange={(e) => onTempPriceChange('Îß§Îß§', 'max', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-primary align-self-center fw-bold">
                                                            {tempPriceFilters.Îß§Îß§.max ? formatPriceForDisplay(tempPriceFilters.Îß§Îß§.max) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                            </Row>
                                        </div>
                                    </Col>
                                )}

                                {selectedBuyTypes.has('ÏõîÏÑ∏') && (
                                    <Col xs={12} lg={12} className="mb-3">
                                        <div className="border rounded p-3">
                                            <h6 className="mb-3 text-success">ÏõîÏÑ∏</h6>
                                            <Row>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">Î≥¥Ï¶ùÍ∏à ÏµúÏÜå</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="1000000000"
                                                        step="1000000"
                                                        value={sliderValues.ÏõîÏÑ∏.depositMin}
                                                        onChange={(e) => onSliderChange('ÏõîÏÑ∏', 'depositMin', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 10000000"
                                                            value={tempPriceFilters.ÏõîÏÑ∏.depositMin ? formatAppliedPrice(tempPriceFilters.ÏõîÏÑ∏.depositMin) : ''}
                                                            onChange={(e) => onTempPriceChange('ÏõîÏÑ∏', 'depositMin', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-success align-self-center fw-bold">
                                                            {tempPriceFilters.ÏõîÏÑ∏.depositMin ? formatPriceForDisplay(tempPriceFilters.ÏõîÏÑ∏.depositMin) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">Î≥¥Ï¶ùÍ∏à ÏµúÎåÄ</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="1000000000"
                                                        step="1000000"
                                                        value={sliderValues.ÏõîÏÑ∏.depositMax}
                                                        onChange={(e) => onSliderChange('ÏõîÏÑ∏', 'depositMax', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 100000000"
                                                            value={tempPriceFilters.ÏõîÏÑ∏.depositMax ? formatAppliedPrice(tempPriceFilters.ÏõîÏÑ∏.depositMax) : ''}
                                                            onChange={(e) => onTempPriceChange('ÏõîÏÑ∏', 'depositMax', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-success align-self-center fw-bold">
                                                            {tempPriceFilters.ÏõîÏÑ∏.depositMax ? formatPriceForDisplay(tempPriceFilters.ÏõîÏÑ∏.depositMax) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">ÏõîÏÑ∏ ÏµúÏÜå</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="10000000"
                                                        step="10000"
                                                        value={sliderValues.ÏõîÏÑ∏.rentMin}
                                                        onChange={(e) => onSliderChange('ÏõîÏÑ∏', 'rentMin', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 500000"
                                                            value={tempPriceFilters.ÏõîÏÑ∏.rentMin ? formatAppliedPrice(tempPriceFilters.ÏõîÏÑ∏.rentMin) : ''}
                                                            onChange={(e) => onTempPriceChange('ÏõîÏÑ∏', 'rentMin', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-success align-self-center fw-bold">
                                                            {tempPriceFilters.ÏõîÏÑ∏.rentMin ? formatPriceForDisplay(tempPriceFilters.ÏõîÏÑ∏.rentMin) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">ÏõîÏÑ∏ ÏµúÎåÄ</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="10000000"
                                                        step="10000"
                                                        value={sliderValues.ÏõîÏÑ∏.rentMax}
                                                        onChange={(e) => onSliderChange('ÏõîÏÑ∏', 'rentMax', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 2000000"
                                                            value={tempPriceFilters.ÏõîÏÑ∏.rentMax ? formatAppliedPrice(tempPriceFilters.ÏõîÏÑ∏.rentMax) : ''}
                                                            onChange={(e) => onTempPriceChange('ÏõîÏÑ∏', 'rentMax', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-success align-self-center fw-bold">
                                                            {tempPriceFilters.ÏõîÏÑ∏.rentMax ? formatPriceForDisplay(tempPriceFilters.ÏõîÏÑ∏.rentMax) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                            </Row>
                                        </div>
                                    </Col>
                                )}

                                {selectedBuyTypes.has('Ï†ÑÏÑ∏') && (
                                    <Col xs={12} lg={12} className="mb-3">
                                        <div className="border rounded p-3">
                                            <h6 className="mb-3 text-warning">Ï†ÑÏÑ∏</h6>
                                            <Row>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">ÏµúÏÜåÍ∞ÄÍ≤©</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="10000000000"
                                                        step="10000000"
                                                        value={sliderValues.Ï†ÑÏÑ∏.min}
                                                        onChange={(e) => onSliderChange('Ï†ÑÏÑ∏', 'min', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 100000000"
                                                            value={tempPriceFilters.Ï†ÑÏÑ∏.min ? formatAppliedPrice(tempPriceFilters.Ï†ÑÏÑ∏.min) : ''}
                                                            onChange={(e) => onTempPriceChange('Ï†ÑÏÑ∏', 'min', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-warning align-self-center fw-bold">
                                                            {tempPriceFilters.Ï†ÑÏÑ∏.min ? formatPriceForDisplay(tempPriceFilters.Ï†ÑÏÑ∏.min) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                                <Col xs={12} md={6} className="mb-3">
                                                    <Form.Label className="small fw-bold">ÏµúÎåÄÍ∞ÄÍ≤©</Form.Label>
                                                    <Form.Range
                                                        min="0"
                                                        max="10000000000"
                                                        step="10000000"
                                                        value={sliderValues.Ï†ÑÏÑ∏.max}
                                                        onChange={(e) => onSliderChange('Ï†ÑÏÑ∏', 'max', e.target.value)}
                                                        className="mb-2"
                                                    />
                                                    <div className="d-flex gap-2">
                                                        <Form.Control
                                                            type="text"
                                                            placeholder="Ïòà: 500000000"
                                                            value={tempPriceFilters.Ï†ÑÏÑ∏.max ? formatAppliedPrice(tempPriceFilters.Ï†ÑÏÑ∏.max) : ''}
                                                            onChange={(e) => onTempPriceChange('Ï†ÑÏÑ∏', 'max', e.target.value)}
                                                            size="sm"
                                                        />
                                                        <small className="text-warning align-self-center fw-bold">
                                                            {tempPriceFilters.Ï†ÑÏÑ∏.max ? formatPriceForDisplay(tempPriceFilters.Ï†ÑÏÑ∏.max) : '0Ïõê'}
                                                        </small>
                                                    </div>
                                                </Col>
                                            </Row>
                                        </div>
                                    </Col>
                                )}
                            </Row>
                        </Col>
                    </Row>

                    <Row className="mt-3">
                        <Col xs={12}>
                            <div className="d-flex gap-2">
                                <Button variant="primary" onClick={onApply} className="flex-grow-1">
                                    ÌïÑÌÑ∞ Ï†ÅÏö©
                                </Button>
                                <Button variant="outline-secondary" onClick={onClear} className="flex-grow-1">
                                    ÌïÑÌÑ∞ Ï¥àÍ∏∞Ìôî
                                </Button>
                            </div>
                        </Col>
                    </Row>

                    <Row className="mt-3">
                        <Col xs={12}>
                            <div className="bg-light p-2 rounded">
                                <small className="text-muted">
                                    <strong>ÌïÑÌÑ∞ Í≤∞Í≥º:</strong> {filteredCount}Í∞úÏùò Í≥†Í∞ùÏù¥ ÌëúÏãúÎê©ÎãàÎã§
                                    {selectedBuyTypes.size > 0 && (
                                        <span className="ms-2">(ÏÑ†ÌÉùÎêú Ïú†Ìòï: {Array.from(selectedBuyTypes).join(', ')})</span>
                                    )}
                                    {Object.values(appliedPriceFilters).some(filter => Object.values(filter).some(value => value !== '')) && (
                                        <span className="ms-2">| Í∞ÄÍ≤© Î≤îÏúÑ ÌïÑÌÑ∞ Ï†ÅÏö©Îê®</span>
                                    )}
                                </small>
                            </div>
                        </Col>
                    </Row>
                </Accordion.Body>
            </Accordion.Item>
        </Accordion>
    );
};

export default BuyersFilterPanel;


